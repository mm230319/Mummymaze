#include <stdio.h>
#include <SDL.h>
#include <SDL_mouse.h>
#include <math.h>


void drawRoundedRect(SDL_Renderer* renderer, int x, int y, int w, int h, int radius) {
    /*SDL_Rect rect = {x + radius, y, w - 2 * radius, h};
    SDL_RenderFillRect(renderer, &rect);

    // Gornji levi ugao
    rect = (SDL_Rect){x, y, radius, radius};
    SDL_RenderFillRect(renderer, &rect);

    // Gornji desni ugao
    rect = (SDL_Rect){x + w - radius, y, radius, radius};
    SDL_RenderFillRect(renderer, &rect);

    // Donji levi ugao
    rect = (SDL_Rect){x, y + h - radius, radius, radius};
    SDL_RenderFillRect(renderer, &rect);

    // Donji desni ugao
    rect = (SDL_Rect){x + w - radius, y + h - radius, radius, radius};
    SDL_RenderFillRect(renderer, &rect);
    */
    SDL_Rect rect = {x + radius, y, w - 2 * radius, h};
    SDL_RenderFillRect(renderer, &rect);
    SDL_Rect rect1 = {x, y+radius,w , h - 2*radius};
    SDL_RenderFillRect(renderer, &rect1);
    double i;
    double step = M_PI / (2 * radius); // Korak du≈æine luka
    for (i = 0; i <= radius; i+=0.1) {
        double angle = step * i;
        SDL_RenderDrawPoint(renderer, x + radius - (int)(cos(angle) * radius), y + radius - (int)(sin(angle) * radius));
        SDL_RenderDrawLine(renderer,x + radius - (int)(cos(angle) * radius),y + radius - (int)(sin(angle) * radius),x+radius , y+radius);
        SDL_RenderDrawPoint(renderer, x + w - radius + (int)(cos(angle) * radius), y + radius - (int)(sin(angle) * radius));
        SDL_RenderDrawLine(renderer,x + w - radius + (int)(cos(angle) * radius),y + radius - (int)(sin(angle) * radius),x+w-radius , y + radius);
        SDL_RenderDrawPoint(renderer, x + radius - (int)(cos(angle) * radius), y + h - radius + (int)(sin(angle) * radius));
        SDL_RenderDrawLine(renderer,x + radius - (int)(cos(angle) * radius),y + h - radius + (int)(sin(angle) * radius),x+radius , y + h - radius);
        SDL_RenderDrawPoint(renderer, x + w - radius + (int)(cos(angle) * radius), y + h - radius + (int)(sin(angle) * radius));
        SDL_RenderDrawLine(renderer,x + w - radius + (int)(cos(angle) * radius),y + h - radius + (int)(sin(angle) * radius),x + w - radius, y + h - radius);
    }
}

int main(int argc, char* argv[]) {
    SDL_Window *window;
    window = SDL_CreateWindow("Mummy maze",
                              SDL_WINDOWPOS_CENTERED,
                              SDL_WINDOWPOS_CENTERED,
                              1280,
                              720,
                              0);
    SDL_Renderer *renderer;
    renderer = SDL_CreateRenderer(window,
                                  0,
                                  0);
    SDL_SetRenderDrawColor(renderer,250,120,68,255);
    SDL_RenderClear(renderer);
    SDL_SetRenderDrawColor(renderer,139,69,19,255);
    for(int i=0;i<4;i++){
        drawRoundedRect(renderer, 500, 150 + (i*110), 250, 80, 30);
    }
    SDL_RenderPresent(renderer);
    SDL_Delay(5000);
    SDL_DestroyWindow(window);
    SDL_Quit();
    return 0;
}
